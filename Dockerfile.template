FROM resin/%%RESIN_MACHINE_NAME%%-alpine-python:3-slim

#RUN apt-get update -q
#RUN apt-get install -q -y build-essential git cmake pkg-config \
#    libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev \
#    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
#    libxvidcore-dev libx264-dev \
#    libgtk2.0-dev \
#    unzip wget
#
#RUN pip install Image matplotlib
#
#RUN wget -q -O /opencv.zip https://github.com/Itseez/opencv/archive/3.1.0.zip
#RUN wget -q -O /opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.1.0.zip
#
#WORKDIR /
#
#RUN unzip -q opencv.zip
#RUN unzip -q opencv_contrib.zip
#
#RUN mkdir /opencv-3.1.0/build
#WORKDIR /opencv-3.1.0/build
#
#
#RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
#	-D CMAKE_INSTALL_PREFIX=/usr/local \
#	-D INSTALL_C_EXAMPLES=OFF \
#	-D INSTALL_PYTHON_EXAMPLES=ON \
#	-D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib-3.1.0/modules \
#	-D BUILD_EXAMPLES=ON ..
#
#RUN make
#RUN make install

#RUN pip install -q redis

ENV OPENCV https://github.com/opencv/opencv/archive/3.3.0.tar.gz
ENV OPENCV_EXTRA https://github.com/opencv/opencv_contrib/archive/3.3.0.tar.gz
ENV OPENCV_VER 3.3.0

RUN apk add -U --no-cache --virtual=build-dependencies \
    linux-headers musl libxml2-dev libxslt-dev libffi-dev g++ \
    musl-dev libgcc openssl-dev jpeg-dev zlib-dev freetype-dev build-base \
    lcms2-dev openjpeg-dev python3-dev make cmake clang clang-dev ninja

RUN apk add --no-cache gcc tesseract-ocr zlib jpeg libjpeg freetype openjpeg curl \
    && ln -s /usr/include/locale.h /usr/include/xlocale.h \
    && pip install -U --no-cache-dir Pillow numpy

RUN mkdir -p /opt && cd /opt && \
    curl -L $OPENCV | tar zx && \
    curl -L $OPENCV_EXTRA | tar zx && \
    cd opencv-$OPENCV_VER && \
    mkdir build && cd build && \
    cmake -G Ninja \
          -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_INSTALL_PREFIX=/usr/local \
          -D WITH_FFMPEG=NO \
          -D WITH_IPP=NO \
          -D PYTHON_EXECUTABLE=/usr/bin/python3 \
          -D OPENCV_EXTRA_MODULES_PATH=//opt/opencv_contrib-$OPENCV_VER/modules \
          -D WITH_OPENEXR=NO .. && \
    ninja && ninja install && \
    ln -s /usr/local/lib/python3.6/site-packages/cv2.cpython-36m-x86_64-linux-gnu.so \
          /usr/lib/python3.6/site-packages/cv2.so && \
    apk del build-dependencies && \
    rm -rf /var/cache/apk/*

RUN pip install -U --no-cache-dir redis
RUN pip install -U --no-cache-dir opencv-python

ADD object_detection /app/object_detection
ADD utils /app/utils
ADD *.py /app/

WORKDIR /app

RUN python -u object_detection_app.py --help

CMD python -u object_detection_app.py -num-w 1
